using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using WeAreDevs;

namespace WeAreDevs.Windows
{
    public partial class ScriptHub : Form
    {
        List<ScriptObj> scripts;

        public ScriptHub()
        {
            InitializeComponent();
            scripts = ScriptList();
            FillListBox();
        }

        private List<ScriptObj> ScriptList()
        {
            string json;
            try
            {
                WebClient wc = new WebClient();
                json = wc.DownloadString("http://wearedevs-api.hnt8.net/api/scripts/list");
            } catch 
            { 
                MessageBox.Show("Failed to fetch scripts from script API. Please try again later.", "WeAreDevs - Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                Logger.WriteLine("Failed to fetch scripts from script API.", Logger.LogType.NEGATIVE, ConsoleColor.Red);
                return null;
            }

            var n = JsonConvert.DeserializeObject(json, new JsonSerializerSettings
            {
                ObjectCreationHandling = ObjectCreationHandling.Replace
            });
            return JsonConvert.DeserializeObject<List<ScriptObj>>(json);
        }

        private void FillListBox()
        {
            listBox1.Items.Clear();
            
            foreach (ScriptObj script in scripts)
            {
                listBox1.Items.Add(script.name);
                Logger.WriteLine($"Added {script.name} to script hub list.");
            }
        }

        private void listBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            foreach (ScriptObj script in scripts)
            {
                if (script.name == listBox1.SelectedItem)
                {
                    ScriptName.Text = script.name;
                    Description.Text = script.description;
                    Logger.WriteLine($"Selected {script.name} in the script hub.");
                }
            }
        }

        private void ExecuteButton_Click(object sender, EventArgs e)
        {
            foreach (ScriptObj script in scripts)
            {
                if (script.name == ScriptName.Text)
                    Execution.Execute(script.script);
            }
        }

        private void siticoneGradientPanel1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void Title_Click(object sender, EventArgs e)
        {

        }

        private void siticoneControlBox1_Click(object sender, EventArgs e)
        {
            this.Dispose();
        }

        private void ScriptName_Click(object sender, EventArgs e)
        {

        }

        private void Description_Click(object sender, EventArgs e)
        {

        }
    }
}
